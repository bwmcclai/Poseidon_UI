[{"id":"f082a68a.6a62b8","type":"tab","label":"Raspberry Pi"},{"id":"88d132c1.2424e","type":"tab","label":"WebSocket"},{"id":"127870c4.732a3f","type":"subflow","name":"Subflow 1","info":"","in":[],"out":[]},{"id":"7f61a150.54954","type":"websocket-listener","z":"","path":"/ws/ui","wholemsg":"false"},{"id":"9cea0359.3f90f","type":"websocket out","z":"88d132c1.2424e","name":"","server":"7f61a150.54954","client":"","x":658.7999877929688,"y":183.79998779296875,"wires":[]},{"id":"5d8895f8.e5eb5c","type":"websocket in","z":"88d132c1.2424e","name":"","server":"7f61a150.54954","client":"","x":215.79998779296875,"y":174.79998779296875,"wires":[["71b080a0.483d6"]]},{"id":"71b080a0.483d6","type":"function","z":"88d132c1.2424e","name":"UI Info","func":"if (msg.payload == \"getContent\"){\n    \n    msg.payload = \"ui_Info=Welcome to the new UI for ROV control and configuration.  This interface is hosted from the Raspberry Pi onboard the ROV.  It allows you to connect to the ROV on any device without the need to install any software. </br></br>To start with, the UI will mainly be used to configure subsystems, check system health, and view alarms and history. </br></br>More features are being added daily.\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":442.79998779296875,"y":185.79998779296875,"wires":[["9cea0359.3f90f"]]},{"id":"eab14a4d.f98e68","type":"inject","z":"f082a68a.6a62b8","name":"Refresh Every 5 seconds","topic":"","payload":"","payloadType":"date","repeat":"5","crontab":"","once":true,"x":297.1999816894531,"y":519.2000122070312,"wires":[["8a27c568.06f608","1f3bbdd2.fb8e02","b6e62112.91e5b"]]},{"id":"8a27c568.06f608","type":"exec","z":"f082a68a.6a62b8","command":"vcgencmd","addpay":false,"append":"measure_temp","useSpawn":"","name":"getCPUtemp","x":713.199951171875,"y":411.7000427246094,"wires":[["9a736686.5aee38"],[],[]]},{"id":"9a736686.5aee38","type":"function","z":"f082a68a.6a62b8","name":"ConvertTemp","func":"msg.payload = \"CPU_Temp=\" + Math.round((msg.payload.replace(\"temp=\",\"\").replace(\"'C\\n\",\"\") * 1.8) + 32);\nreturn msg;","outputs":1,"noerr":0,"x":997.2000122070312,"y":415.20001220703125,"wires":[["9cf9aba9.3b8108"]]},{"id":"3832267e.16076a","type":"exec","z":"f082a68a.6a62b8","command":"df -hl | grep '/dev/root'","addpay":false,"append":"","useSpawn":"","timer":"","name":"getDiskSpace","x":733.4499664306641,"y":147.2000331878662,"wires":[["85e14dbe.5aac"],[],[]]},{"id":"fc4d78f6.9d63e8","type":"inject","z":"f082a68a.6a62b8","name":"Refresh Every Second","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":true,"x":303.4999694824219,"y":557.7999877929688,"wires":[["9e07b748.ff1218"]]},{"id":"85e14dbe.5aac","type":"function","z":"f082a68a.6a62b8","name":"ParseOutPercentage","func":"msg.payload = \"Disk_Space=\" + msg.payload.replace(\"/dev/root \",\"\").split(\" \")[14].replace(\"%\",\"\");\nreturn msg;","outputs":1,"noerr":0,"x":1019.7000312805176,"y":173.20002126693726,"wires":[["9cf9aba9.3b8108"]]},{"id":"b897ddb6.b1ccd","type":"exec","z":"f082a68a.6a62b8","command":"cat /etc/os-release","addpay":false,"append":"","useSpawn":"","timer":"","name":"getOSInfo","x":712.1999664306641,"y":213.70001983642578,"wires":[["61a38840.34c148"],[],[]]},{"id":"61a38840.34c148","type":"function","z":"f082a68a.6a62b8","name":"ParseOutOS","func":"msg.payload = \"Pi_OS=\" + msg.payload.split('\"')[1];\nreturn msg;","outputs":1,"noerr":0,"x":1003.2000312805176,"y":243.95000457763672,"wires":[["9cf9aba9.3b8108"]]},{"id":"f769f3f0.18b5f","type":"function","z":"f082a68a.6a62b8","name":"getData Request from UI","func":"if (msg.payload == \"getData\"){\n    \n    return msg;\n}\n","outputs":1,"noerr":0,"x":310,"y":381,"wires":[["8a27c568.06f608","3832267e.16076a","b897ddb6.b1ccd","1f3bbdd2.fb8e02","b6e62112.91e5b"]]},{"id":"67219c55.c72a04","type":"websocket in","z":"f082a68a.6a62b8","name":"","server":"7f61a150.54954","client":"","x":85,"y":381,"wires":[["f769f3f0.18b5f","b2bc3a31.fe52a8","6899ec13.293934"]]},{"id":"9cf9aba9.3b8108","type":"websocket out","z":"f082a68a.6a62b8","name":"","server":"7f61a150.54954","client":"","x":1398.2857360839844,"y":405.28572940826416,"wires":[]},{"id":"1f3bbdd2.fb8e02","type":"exec","z":"f082a68a.6a62b8","command":"ifconfig wlan0","addpay":false,"append":"","useSpawn":"","timer":"","name":"","x":708.3214797973633,"y":319.3928928375244,"wires":[["bd9afcff.91f49"],[],[]]},{"id":"bd9afcff.91f49","type":"function","z":"f082a68a.6a62b8","name":"getwlan0 status","func":"var found = msg.payload.match(\"inet addr:\")\nif (found===null) {\n        msg.payload = \"Pi_Wifi_Status=Not Connected\"\n}\nelse {\n    \n    msg.payload = \"Pi_Wifi_Status=Connected\"\n}\nreturn msg;","outputs":1,"noerr":0,"x":1013.7000122070312,"y":322.70001220703125,"wires":[["9cf9aba9.3b8108"]]},{"id":"b2bc3a31.fe52a8","type":"function","z":"f082a68a.6a62b8","name":"Control_Pi_Shutdown from UI","func":"if (msg.payload == \"Control_Pi_Shutdown\"){\n    \n    return msg;\n}\n","outputs":1,"noerr":0,"x":445,"y":38,"wires":[["46583e23.7dfb6"]]},{"id":"6899ec13.293934","type":"function","z":"f082a68a.6a62b8","name":"Control_Pi_Reboot from UI","func":"if (msg.payload == \"Control_Pi_Reboot\"){\n    \n    return msg;\n}\n","outputs":1,"noerr":0,"x":433,"y":85,"wires":[["54b20661.c43898"]]},{"id":"46583e23.7dfb6","type":"exec","z":"f082a68a.6a62b8","command":"sudo shutdown -h now","addpay":false,"append":"","useSpawn":"","timer":"","name":"Shutdown!","x":717,"y":30.5,"wires":[[],[],[]]},{"id":"54b20661.c43898","type":"exec","z":"f082a68a.6a62b8","command":"sudo reboot","addpay":false,"append":"","useSpawn":"","timer":"","name":"Reboot!","x":709,"y":82,"wires":[[],[],[]]},{"id":"b6e62112.91e5b","type":"exec","z":"f082a68a.6a62b8","command":"free -h","addpay":false,"append":"","useSpawn":"","timer":"","name":"getMemory","x":713,"y":472,"wires":[["8797f965.b038f8"],[],[]]},{"id":"8797f965.b038f8","type":"function","z":"f082a68a.6a62b8","name":"GetMem","func":"    var totalMemStr = msg.payload.split(\"\\n\")[1].split(\" \")[10];\n    var availableMemStr = msg.payload.split(\"\\n\")[1].split(\" \")[17];\n    var totalMemVal = totalMemStr.substring(0, totalMemStr.length-1);\n    var availMemVal = availableMemStr.substring(0, availableMemStr.length-1);\n    var percent = { payload: \"CPU_Mem=\" + ((availMemVal / totalMemVal)*100).toFixed(2)}\n    var TotalMem = {payload: \"Total_Mem=\" + availableMemStr + \" of \" + totalMemStr};\n    \nreturn [ TotalMem, percent ];","outputs":"2","noerr":0,"x":988,"y":471,"wires":[["9cf9aba9.3b8108"],["9cf9aba9.3b8108"]]},{"id":"7deaab53.01dd84","type":"comment","z":"f082a68a.6a62b8","name":"Send Data to UI","info":"","x":1401,"y":364,"wires":[]},{"id":"548a8b9a.9a6dd4","type":"comment","z":"f082a68a.6a62b8","name":"Receive Commands from UI","info":"","x":140,"y":441,"wires":[]},{"id":"7fa39f8b.b6f1d","type":"comment","z":"f082a68a.6a62b8","name":"Parsing and Formatting","info":"","x":1012,"y":112,"wires":[]},{"id":"9e07b748.ff1218","type":"function","z":"f082a68a.6a62b8","name":"SecondsUptime","func":"// initialise the counter to 0 if it doesn't exist already\nglobal.set(\"UptimeSec\",global.get(\"UptimeSec\") + 1);\n\n\n\n\nfunction convert(seconds) {\n    seconds = Number(seconds);\n    var hours = Math.floor(seconds / 3600);\n    var minutes = Math.floor(seconds % 3600 / 60);\n    var sec = Math.floor(seconds % 3600 % 60);\n    return ((hours > 0 ? hours + \":\" + (minutes < 10 ? \"0\" : \"\") : \"\") + minutes + \":\" + (sec < 10 ? \"0\" : \"\") + sec); \n}\n\nmsg.payload = \"upTime=\" + convert(global.get(\"UptimeSec\"));\n\n\nreturn msg;","outputs":1,"noerr":0,"x":999,"y":542,"wires":[["9cf9aba9.3b8108"]]},{"id":"22208e3.8d99e72","type":"function","z":"f082a68a.6a62b8","name":"Reset Uptime Counter on Boot","func":"global.set(\"UptimeSec\",0);","outputs":1,"noerr":0,"x":641,"y":635,"wires":[[]]},{"id":"a4cae263.74566","type":"inject","z":"f082a68a.6a62b8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":339,"y":633,"wires":[["22208e3.8d99e72"]]}]